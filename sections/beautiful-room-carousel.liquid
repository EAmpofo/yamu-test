<section class="inspiration-section">
  <div class="inspiration-container">
    <!-- Text Section -->
    <div class="inspiration-text">
      <h2>20+ Beautiful rooms inspiration</h2>
      <p>Our designer already made a lot of beautiful prototype of rooms that inspire you</p>
      <a href="#" class="explore-btn">Explore More</a>
    </div>
    <!-- Carousel Section -->
    <div class="inspiration-carousel">
      <div class="carousel-track">
        {% for block in section.blocks %}
          <div class="carousel-slide {% if forloop.first %}active{% endif %}">
            <img src="{{ block.settings.image | img_url: '720x' }}" alt="Inspiration Image">
          </div>
        {% endfor %}
      </div>
      <button class="carousel-button prev">&lt;</button>
      <button class="carousel-button next">&gt;</button>
      <!-- Dots Navigation -->
      <div class="carousel-dots">
        {% for block in section.blocks %}
          <button class="dot {% if forloop.first %}active{% endif %}"></button>
        {% endfor %}
      </div>
    </div>
  </div>
</section>
<script>
  document.addEventListener("DOMContentLoaded", function () {
  const track = document.querySelector(".carousel-track");
  const slides = Array.from(track.children);
  const prevButton = document.querySelector(".carousel-button.prev");
  const nextButton = document.querySelector(".carousel-button.next");
  const dotsNav = document.querySelector(".carousel-dots");
  const dots = Array.from(dotsNav.children);

  let currentIndex = 0;

  function updateCarousel(newIndex) {
    const currentSlide = slides[currentIndex];
    const currentDot = dots[currentIndex];

    currentSlide.classList.remove("active");
    currentDot.classList.remove("active");

    currentIndex = newIndex;

    const nextSlide = slides[currentIndex];
    const nextDot = dots[currentIndex];

    nextSlide.classList.add("active");
    nextDot.classList.add("active");

    track.style.transform = `translateX(-${currentIndex * 100}%)`;
  }

  nextButton.addEventListener("click", () => {
    const newIndex = (currentIndex + 1) % slides.length;
    updateCarousel(newIndex);
  });

  prevButton.addEventListener("click", () => {
    const newIndex = (currentIndex - 1 + slides.length) % slides.length;
    updateCarousel(newIndex);
  });

  dots.forEach((dot, index) => {
    dot.addEventListener("click", () => {
      updateCarousel(index);
    });
  });
});
</script>

<style>
    .inspiration-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #f5f7e7;
    padding: 2rem;
  }

  .inspiration-text {
    width: 40%;
  }

  .inspiration-text h2 {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }

  .inspiration-text p {
    font-size: 1rem;
    margin-bottom: 1.5rem;
  }

  .explore-btn {
    background-color: #2c3e20;
    color: #fff;
    padding: 0.75rem 1.5rem;
    text-decoration: none;
    border-radius: 5px;
  }

  .inspiration-carousel {
    width: 55%;
    position: relative;
    display: flex;
    flex-direction: column;
  }

  .carousel-track {
    display: flex;
    overflow: hidden;
  }

  .carousel-slide {
    min-width: 100%;
    transition: transform 0.5s ease;
    opacity: 0.5;
  }

  .carousel-slide img {
    width: 100%;
    border-radius: 8px;
  }

  .carousel-slide.active {
    transform: scale(1.1);
    opacity: 1;
  }

  .carousel-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.5);
    color: #fff;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem 1rem;
    border-radius: 50%;
  }

  .carousel-button.prev {
    left: -2rem;
  }

  .carousel-button.next {
    right: -2rem;
  }

  .carousel-dots {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
  }

  .dot {
    width: 12px;
    height: 12px;
    background-color: #ccc;
    border: none;
    border-radius: 50%;
    margin: 0 5px;
    cursor: pointer;
  }

  .dot.active {
    background-color: #2c3e20;
  }
</style>

{% schema %}
{
  "name": "Beautiful Carousel",
  "settings": [],
  "blocks": [
    {
      "type": "image",
      "name": "Carousel Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Beautiful Room Carousel",
      "category": "Featured"
    }
  ]
}
{% endschema %}
